{"version":3,"sources":["utils/service.js","assets/plus.svg","assets/delete.svg","Component/ShowCard.js","Component/Search.js","App.js","reportWebVitals.js","index.js"],"names":["cityArr","key","FetchCity","city","a","axios","get","res","data","AddCity","length","splice","push","DelCity","RemArr","filter","x","GetCity","ShowCard","button","reload","useState","Weather","setWeather","execute","console","log","err","fetchApi","main","temp","className","onClick","alt","src","plus","del","Search","City","setCity","Text","setText","id","type","placeholder","value","onChange","e","target","App","Cities","setCities","refresh","setrefresh","useEffect","getCitiesArr","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60322412.chunk.js","sourcesContent":["import axios from \"axios\";\n\nlet cityArr = [];\nconst key = \"d161f626b2889ca35b66462f9868a7b8\";\nexport async function FetchCity(city){\n        const res = await  axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${key}`);\n        return res.data;\n    \n};\n\nexport async function AddCity(city){\n    if(cityArr.length === 3)\n    {\n        cityArr.splice(0,1);\n    }\n    cityArr.push(city);\n};\n\nexport async function DelCity(city){\n    const RemArr = cityArr.filter((x) => {\n        return x!==city;\n      });\n    cityArr = RemArr  \n};\n\nexport async function GetCity(){\n    return cityArr;\n}","export default __webpack_public_path__ + \"static/media/plus.7824fa32.svg\";","export default __webpack_public_path__ + \"static/media/delete.a4222ba3.svg\";","import React,{useState} from 'react'\nimport { AddCity, DelCity ,FetchCity} from '../utils/service'\nimport \"../App.css\"\nimport plus from \"../assets/plus.svg\";\nimport del from \"../assets/delete.svg\";\nconst ShowCard = ({city , button , reload}) => {\n    const [Weather,setWeather]=useState(\"\");\n    const execute = async() =>{\n        if(button === true){\n            try{\n                await AddCity(city);\n                reload();\n            }catch(err){\n                console.log(err);\n            }\n        }\n        else{\n            try{\n                DelCity(city);\n                reload();\n            }catch(err){\n                console.log(err);\n            }\n        }\n    }\n\n    const fetchApi = async (city)=>{\n        try{\n            const res = await FetchCity(city);\n            setWeather(res.main.temp);\n        }catch(err){\n            console.log(err);\n        }\n    }\n    fetchApi(city);\n    return (\n        <div className=\"card\">\n            <div>{city}</div>\n            <div>{Weather} deg</div>\n            <div onClick={execute}>\n                <img alt=\"Operation\" src={button ? plus : del}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ShowCard\n","import React,{useState} from 'react'\nimport ShowCard from './ShowCard';\n\nconst Search = ({reload}) => {\n    const [City, setCity] = useState(\"\");\n    const [Text, setText] = useState(City);\n    const isSearch = () =>{\n        console.log(Text);\n        setCity(Text);\n    }\n    return (\n        <div id=\"SearchBox\">\n            <input\n            type=\"text\"\n            placeholder=\"Search City By Name\"\n            value={Text}\n            onChange={(e) => setText(e.target.value)}\n          />\n            <button onClick={()=> isSearch()}>Search</button>\n              {City.length !== 0 ?<ShowCard city={City} button={true} reload={reload}/>:null}\n        </div>\n    )\n}\n\nexport default Search\n","import './App.css';\nimport Search from './Component/Search';\nimport {GetCity} from \"./utils/service\"\nimport { useEffect, useState } from 'react';\nimport ShowCard from './Component/ShowCard';\n\nfunction App() {\n  const [Cities, setCities] = useState([]);\n  const [refresh, setrefresh] = useState(true);\n   useEffect(() => {\n    const getCitiesArr = async () => {\n      try {\n         const res = await GetCity();\n          setCities(res);\n      } catch (err) {\n      }\n    };\n    getCitiesArr(); \n    \n   }, [refresh])\n    \n  const reload =()=>{\n    setrefresh(!refresh);\n  }\n  return (\n    <div>\n      <div className=\"Search\">\n        <h1><b>SEARCH WEATHER</b></h1>\n        <h4>*Press Plus Sign For Save A Place </h4>\n        <h4>*Press Bin Sign For Save A Place  </h4>\n        <h4><b>NOTE: </b>If You Add More Than Three Places , Only Last Three Places Will Be Restored</h4>\n      <Search reload={reload}/>\n      </div>\n       <div id=\"SavedCity\">\n        {Cities.map((city)=>{\n        return <ShowCard city={city} button={false} reload={reload}/>\n      })}</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}